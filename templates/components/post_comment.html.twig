{% if withPost %}
    {{ component('post', {post: comment.post}) }}
{% endif %}
{% if not app.user or (app.user and not app.user.isBlocked(comment.user)) %}
    {% if comment.getVisibility() is same as 'private' and (not app.user or not app.user.isFollower(comment.user)) %}
        <div class="section section--small {{ 'comment-level--' ~ this.getLevel() }}"
             style="z-index:3; position:relative;margin-bottom:0;">
            Private
        </div>
    {% else %}
        <blockquote{{ attributes.defaults({
            class: html_classes('section comment post-comment subject ' ~ 'comment-level--' ~ this.getLevel(),{
                'own': app.user and comment.isAuthor(app.user),
                'new-comment': is_new_comment(app.user, comment),
                'author': comment.isAuthor(comment.post.user),
                'show-preview': app.request.cookies.get(constant('App\\Controller\\User\\ThemeSettingsController::KBIN_POSTS_SHOW_PREVIEW')) is same as 'true'
            })}).without('id') }}
                id="post-comment-{{ comment.id }}"
                data-controller="comment subject mentions"
                data-subject-parent-value="{{ comment.parent ? comment.parent.id : '' }}"
                data-action="notifications:Notification@window->subject#notification">
            <header>
                {% if comment.isAdult %}<span class="badge danger">18+</span>{% endif %}
                {{ component('user_inline', {user: comment.user, showAvatar: false}) }},
                {% if dateAsUrl %}
                    <a href="{{ post_url(comment.post) ~ '#post-comment-' ~ comment.id }}"
                       class="link-muted">{{ component('date', {date: comment.createdAt}) }}</a>
                {% else %}
                    {{ component('date', {date: comment.createdAt}) }}
                {% endif %}
                {{ component('date_edited', {createdAt: comment.createdAt, editedAt: comment.editedAt}) }}
                {% if comment.lang is not same as app.request.locale and comment.lang is not same as kbin_default_lang() %}
                    <small hidden class="badge-lang">{{ comment.lang|language_name }}</small>
                {% endif %}
            </header>
            {{ component('user_avatar', {
                user: comment.user,
                width: 40,
                height: 40,
                asLink: true
            }) }}
            <div class="content">
                {% if comment.getVisibility() in ['visible', 'private'] or (comment.getVisibility() is same as 'trashed' and this.canSeeTrashed) %}
                    {{ comment.body|markdown|raw }}
                {% elseif(comment.getVisibility() is same as 'trashed') %}
                    <p class="text-muted">{{ 'deleted_by_moderator' }}</p>
                {% elseif(comment.getVisibility() is same as 'soft_deleted') %}
                    <p class="text-muted">{{ 'deleted_by_author' }}</p>
                {% endif %}
            </div>
            {% if comment.getVisibility() in ['visible', 'private'] %}
                {{ component('vote', {
                    subject: comment,
                    showDownvote: false
                }) }}
            {% endif %}
            <footer>
                {% if (comment.getVisibility() in ['visible', 'private'] or comment.getVisibility() is same as 'trashed' and this.canSeeTrashed) and comment.image %}
                    <figure>
                        <a href="{{ uploaded_asset(comment.image.filePath) }}"
                           class="thumb">
                            <img class="thumb-subject"
                                 {% if comment.isAdult %}style="filter: blur(8px);"{% endif %}
                                 src="{{ asset(comment.image.filePath) |imagine_filter('post_thumb') }}"
                                 alt="{{ comment.image.altText }}">
                        </a>
                    </figure>
                {% endif %}
                {% if comment.getVisibility() in ['visible', 'private'] %}
                    <menu>
                        <li>
                            <a class="stretched-link"
                               href="{{ post_comment_create_url(comment) }}#add-comment"
                               data-action="subject#getForm">{{ 'reply'|trans|lower }}</a>
                        </li>
                        <li>
                            {{ component('boost', {
                                subject: comment
                            }) }}
                        </li>
                        {% include 'post/comment/_menu.html.twig' %}
                        <li data-subject-target="loader" style="display:none">
                            <div class="loader" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </li>
                    </menu>
                {% elseif(comment.getVisibility() is same as 'trashed' and this.canSeeTrashed) %}
                    <menu>
                        <li>
                            <form method="post"
                                  action="{{ path('post_comment_restore', {magazine_name: comment.magazine.name, post_id: comment.post.id, comment_id: comment.id}) }}"
                                  onsubmit="return confirm('{{ 'are_you_sure'|trans }}');">
                                <input type="hidden" name="token" value="{{ csrf_token('post_comment_restore') }}">
                                <button type="submit">{{ 'restore'|trans|lower }}</button>
                            </form>
                        </li>
                        <li data-subject-target="loader" style="display:none">
                            <div class="loader" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </li>
                    </menu>
                {% else %}
                    <menu>
                        <li data-subject-target="loader" style="display:none">
                            <div class="loader" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </li>
                    </menu>
                {% endif %}
                {{ component('voters_inline', {
                    subject: comment,
                    url: post_comment_voters_url(comment, 'up')
                }) }}
                <div data-subject-target="container" class="js-container">
                </div>
            </footer>
        </blockquote>
    {% endif %}
    {% if showNested %}
        {{ component('post_comments_nested', {
            comment: comment,
            level: level,
            showNested: true,
            view: app.request.cookies.get(constant('App\\Controller\\User\\ThemeSettingsController::POST_COMMENTS_VIEW'), 'tree')
        }) }}
    {% endif %}
{% endif %}